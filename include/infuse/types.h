/**
 * @file
 * @brief Core Infuse-IoT platform types
 * @copyright 2024 Embeint Holdings Pty Ltd
 * @author Jordan Yates <jordan@embeint.com>
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

#ifndef INFUSE_SDK_INCLUDE_INFUSE_TYPES_H_
#define INFUSE_SDK_INCLUDE_INFUSE_TYPES_H_

#include <zephyr/toolchain.h>

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief Infuse types
 * @defgroup infuse_types Infuse type
 * @{
 */

/** Core Infuse Data Types */
enum infuse_type {
	/** Request device to echo data */
	INFUSE_ECHO_REQ = 0,
	/** Response to echo request */
	INFUSE_ECHO_RSP = 1,
	/** Tagged Data Format */
	INFUSE_TDF = 2,
	/** Infuse RPC command */
	INFUSE_RPC_CMD = 3,
	/** Infuse RPC chunked data */
	INFUSE_RPC_DATA = 4,
	/** Infuse RPC data acknowledgment */
	INFUSE_RPC_DATA_ACK = 5,
	/** Infuse RPC response */
	INFUSE_RPC_RSP = 6,
	/** Infuse ePacket received by device */
	INFUSE_RECEIVED_EPACKET = 7,
	/** Generic ACK, payload is the sequence number of requesting packet */
	INFUSE_ACK = 8,
	/** Data to forward to other devices */
	INFUSE_EPACKET_FORWARD = 9,
	/** Serial logging packet */
	INFUSE_SERIAL_LOG = 10,
	/** Tagged Data Format (Generated by remote device) */
	INFUSE_TDF_REMOTE = 11,
	/** Data to forward to other devices, automatically handling connections */
	INFUSE_EPACKET_FORWARD_AUTO_CONN = 12,
	/** Notification that a connection has terminated */
	INFUSE_EPACKET_CONN_TERMINATED = 13,
	/** Memfault data chunk */
	INFUSE_MEMFAULT_CHUNK = 30,
	/** Infuse key identifiers */
	INFUSE_KEY_IDS = 127,
	/** 128 - 255 can be freely defined by customers */
	INFUSE_CUSTOMER_RANGE_START = 128,
} __packed;

/**
 * @}
 */

#ifdef __cplusplus
}
#endif

#endif /* INFUSE_SDK_INCLUDE_INFUSE_TYPES_H_ */
