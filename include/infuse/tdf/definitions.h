/**
 * @file
 * @brief Autogenerated TDF definitions
 * @copyright 2024 Embeint Inc
 * @author scripts/west_commands/cloudgen.py
 *
 * SPDX-License-Identifier: LicenseRef-Embeint
 */

#ifndef INFUSE_SDK_INCLUDE_INFUSE_TDF_DEFINITIONS_H_
#define INFUSE_SDK_INCLUDE_INFUSE_TDF_DEFINITIONS_H_

#include <stdint.h>

#include <zephyr/toolchain.h>

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief Common TDF struct fields
 * @defgroup tdf_struct_definitions Common TDF struct fields
 * @{
 */

/* MCUboot semantic versioning struct */
struct tdf_struct_mcuboot_img_sem_ver {
	uint8_t major;
	uint8_t minor;
	uint16_t revision;
	uint32_t build_num;
} __packed;

/* Generic 3-axis sensor reading */
struct tdf_struct_xyz_16bit {
	int16_t x;
	int16_t y;
	int16_t z;
} __packed;

/**
 * @}
 */

/**
 * @brief Builtin TDF Structure Definitions
 * @defgroup builtin_tdf_definitions TDF Structure Definitions
 * @{
 */

/* Common announcement packet */
struct tdf_announce {
	/* Unique application ID */
	uint32_t application;
	/* Running application version */
	struct tdf_struct_mcuboot_img_sem_ver version;
	/* Key-Value store reflect global CRC */
	uint32_t kv_crc;
	/* Uptime in seconds */
	uint32_t uptime;
	/* Reboot counter */
	uint16_t reboots;
} __packed;

/* General battery state */
struct tdf_battery_state {
	/* Battery voltage (milliVolts) */
	uint32_t voltage_mv;
	/* Charge current (microamps) */
	uint16_t charge_ua;
	/* State of charge (centipercent) */
	uint16_t soc;
} __packed;

/* Ambient temperature, pressure & humidity */
struct tdf_ambient_temp_pres_hum {
	/* Ambient temperature (millidegrees) */
	int32_t temperature;
	/* Atmospheric pressure (pascals) */
	uint32_t pressure;
	/* Relative humidity (centipercent) */
	uint16_t humidity;
} __packed;

/* Ambient temperature */
struct tdf_ambient_temperature {
	/* Ambient temperature (millidegrees) */
	int32_t temperature;
} __packed;

/* Accelerometer +-2G */
struct tdf_acc_2g {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Accelerometer +-4G */
struct tdf_acc_4g {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Accelerometer +-8G */
struct tdf_acc_8g {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Accelerometer +-16G */
struct tdf_acc_16g {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Gyroscope +-125 DPS */
struct tdf_gyr_125dps {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Gyroscope +-250 DPS */
struct tdf_gyr_250dps {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Gyroscope +-500 DPS */
struct tdf_gyr_500dps {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Gyroscope +-1000 DPS */
struct tdf_gyr_1000dps {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Gyroscope +-2000 DPS */
struct tdf_gyr_2000dps {
	/* Raw sample */
	struct tdf_struct_xyz_16bit sample;
} __packed;

/* Example array type */
struct tdf_array_type {
	/* I am an array of length 4 */
	uint8_t array[4];
} __packed;

/* Infuse-IoT builtin TDF definitions */
enum tdf_builtin_id {
	TDF_ANNOUNCE = 1,
	TDF_BATTERY_STATE = 2,
	TDF_AMBIENT_TEMP_PRES_HUM = 3,
	TDF_AMBIENT_TEMPERATURE = 4,
	TDF_ACC_2G = 10,
	TDF_ACC_4G = 11,
	TDF_ACC_8G = 12,
	TDF_ACC_16G = 13,
	TDF_GYR_125DPS = 14,
	TDF_GYR_250DPS = 15,
	TDF_GYR_500DPS = 16,
	TDF_GYR_1000DPS = 17,
	TDF_GYR_2000DPS = 18,
	TDF_ARRAY_TYPE = 100,
	/* End of builtin TDF range */
	TDF_BUILTIN_END = 1024,
};

/* Size of builtin TDF definitions */
enum tdf_builtin_size {
	_TDF_ANNOUNCE_SIZE = sizeof(struct tdf_announce),
	_TDF_BATTERY_STATE_SIZE = sizeof(struct tdf_battery_state),
	_TDF_AMBIENT_TEMP_PRES_HUM_SIZE = sizeof(struct tdf_ambient_temp_pres_hum),
	_TDF_AMBIENT_TEMPERATURE_SIZE = sizeof(struct tdf_ambient_temperature),
	_TDF_ACC_2G_SIZE = sizeof(struct tdf_acc_2g),
	_TDF_ACC_4G_SIZE = sizeof(struct tdf_acc_4g),
	_TDF_ACC_8G_SIZE = sizeof(struct tdf_acc_8g),
	_TDF_ACC_16G_SIZE = sizeof(struct tdf_acc_16g),
	_TDF_GYR_125DPS_SIZE = sizeof(struct tdf_gyr_125dps),
	_TDF_GYR_250DPS_SIZE = sizeof(struct tdf_gyr_250dps),
	_TDF_GYR_500DPS_SIZE = sizeof(struct tdf_gyr_500dps),
	_TDF_GYR_1000DPS_SIZE = sizeof(struct tdf_gyr_1000dps),
	_TDF_GYR_2000DPS_SIZE = sizeof(struct tdf_gyr_2000dps),
	_TDF_ARRAY_TYPE_SIZE = sizeof(struct tdf_array_type),
};

/**
 * @}
 */

#ifdef __cplusplus
}
#endif

#endif /* INFUSE_SDK_INCLUDE_INFUSE_TDF_DEFINITIONS_H_ */
