#!/usr/bin/env python3
# mypy: ignore-errors
"""Autogenerated TDF decoding logic"""

import ctypes

from infuse_iot.generated.tdf_base import TdfReadingBase, TdfStructBase


class structs:
    EXTENSIONS = True

    class tdf_struct_demo(TdfStructBase):
        """Demo struct"""

        _fields_ = [
            ("x", ctypes.c_int8),
            ("y", ctypes.c_int8),
            ("z", ctypes.c_int8),
        ]
        _pack_ = 1
        _postfix_ = {
            "x": "",
            "y": "",
            "z": "",
        }
        _display_fmt_ = {
            "x": "{}",
            "y": "{}",
            "z": "{}",
        }


class readings:
    EXTENSIONS = True

    class ext1(TdfReadingBase):
        """Extension TDF 1"""

        ID = 1025
        NAME = "EXT1"
        _fields_ = [
            ("a", structs.tdf_struct_demo),
            ("b", structs.tdf_struct_demo),
        ]
        _pack_ = 1
        _postfix_ = {
            "a": "",
            "b": "",
        }
        _display_fmt_ = {
            "a": "{}",
            "b": "{}",
        }

    class ext2(TdfReadingBase):
        """Extension TDF 2"""

        ID = 1026
        NAME = "EXT2"
        _fields_ = [
            ("a", ctypes.c_uint16),
            ("b", ctypes.c_uint16),
        ]
        _pack_ = 1
        _postfix_ = {
            "a": "",
            "b": "",
        }
        _display_fmt_ = {
            "a": "{:.3f}",
            "b": "{}",
        }


id_type_mapping: dict[int, type[TdfReadingBase]] = {
    readings.ext1.ID: readings.ext1,
    readings.ext2.ID: readings.ext2,
}

__all__ = [
    "structs",
    "readings",
    "id_type_mapping",
]
