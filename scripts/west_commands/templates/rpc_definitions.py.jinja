#!/usr/bin/env python3
# mypy: ignore-errors

"""Autogenerated RPC definitions"""

import ctypes
import enum

from infuse_iot.util.ctypes import VLACompatLittleEndianStruct

{% for name, info in structs.items() %}

class {{ name }}(VLACompatLittleEndianStruct):
    """{{ info['description'] }}"""

    _fields_ = [
{% for field in info['fields'] %}
{% if field['num'] != 0 %}
        ("{{ field['py_name'] }}", {{ field['py_type'] }}),
{% endif %}
{% endfor %}
    ]
{% if 'flexible' in info %}
    vla_field = ("{{ info['fields'][-1]['name'] }}", {{ info['fields'][-1]['py_type'] }})
{% endif %}
    _pack_ = 1

{% endfor %}
{% for name, info in enums.items() %}

class {{ name }}(enum.IntEnum):
    """{{ info['description'] }}"""

{% for value in info['values'] %}
    {{ value['py_name'] }} = {{ value['value'] }}
{% endfor %}

{% endfor -%}
{% for command_id, info in commands.items() %}

class {{ info['name'] }}:
    """{{ info['description'] }}"""

    HELP = "{{ info['description'] }}"
    DESCRIPTION = "{{ info['description'] }}"
    COMMAND_ID = {{ command_id }}

    class request(VLACompatLittleEndianStruct):
        _fields_ = [
{% for field in info['request_params'] %}
{% if field['num'] != 0 %}
            ("{{ field['name'] }}", {{ field['py_type'] }}),
{% endif %}
{% endfor %}
        ]
{% if info['request_params']|length and info['request_params'][-1].get('num') == 0 %}
        vla_field = ("{{ info['request_params'][-1]['name'] }}", {{ info['request_params'][-1]['py_type'] }})
{% endif %}
        _pack_ = 1

    class response(VLACompatLittleEndianStruct):
        _fields_ = [
{% for field in info['response_params'] %}
{% if field['num'] != 0 %}
            ("{{ field['name'] }}", {{ field['py_type'] }}),
{% endif %}
{% endfor %}
        ]
{% if info['response_params']|length and info['response_params'][-1].get('num') == 0 %}
        vla_field = ("{{ info['response_params'][-1]['name'] }}", {{ info['response_params'][-1]['py_type'] }})
{% endif %}
        _pack_ = 1

{% endfor -%}
