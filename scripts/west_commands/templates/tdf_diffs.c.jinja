/**
 * @file
 * @brief Autogenerated TDF diff functions
 * @copyright 2024 Embeint Inc
 * @author scripts/west_commands/cloudgen.py
 *
 * SPDX-License-Identifier: LicenseRef-Embeint
 */

#include <stdint.h>

#include <zephyr/sys/util.h>

#include <infuse/tdf/definitions.h>

{% for id, info in definitions.items() %}
{% if 'flexible' not in info %}

bool tdf_diff_encode_{{ info['name'] | lower }}(const void *current, const void *next, int8_t *out)
{
    const struct tdf_{{ info['name'] | lower }} *c = current;
	const struct tdf_{{ info['name'] | lower }} *n = next;
{% for field in info['flat_fields'] %}
    int32_t diff{{ loop.index - 1 }} = n->{{ field }} - c->{{ field }};
{% endfor %}

    if (
{% for field in info['flat_fields'] %}
        !IN_RANGE(diff{{ loop.index - 1 }}, INT8_MIN, INT8_MAX) ||
{% endfor %}
        0
    ) {
        return false;
    }
    if (out != NULL) {
{% for field in info['flat_fields'] %}
        out[{{ loop.index - 1 }}] = diff{{ loop.index - 1 }};
{% endfor %}
    }
    return true;
}

{% endif %}
{% endfor %}
