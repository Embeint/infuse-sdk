{
    "structs": {
        "rpc_struct_mcuboot_img_sem_ver": {
            "description": "MCUboot semantic versioning struct",
            "fields": [
                {"name": "major", "type": "uint8_t"},
                {"name": "minor", "type": "uint8_t"},
                {"name": "revision", "type": "uint16_t"},
                {"name": "build_num", "type": "uint32_t"}
            ]
        },
        "rpc_struct_kv_store_value": {
            "description": "KV store data value",
            "fields": [
                {"name": "id", "type": "uint16_t"},
                {"name": "len", "type": "int16_t"},
                {"name": "data", "type": "uint8_t", "num": 0}
            ]
        },
        "rpc_struct_kv_store_crc": {
            "description": "KV store data CRC",
            "fields": [
                {"name": "id", "type": "uint16_t"},
                {"name": "crc", "type": "int32_t"}
            ]
        },
        "rpc_struct_bt_addr_le": {
            "description": "Bluetooth LE address",
            "fields": [
                {"name": "type", "type": "enum rpc_enum_bt_le_addr_type"},
                {"name": "val", "type": "uint8_t", "num": 6}
            ]
        },
        "rpc_struct_ipv4_address": {
            "description": "IPv4 address",
            "fields": [
                {"name": "addr", "type": "uint8_t", "num": 4}
            ]
        },
        "rpc_struct_ipv6_address": {
            "description": "IPv6 address",
            "fields": [
                {"name": "addr", "type": "uint8_t", "num": 16}
            ]
        },
        "rpc_struct_network_state": {
            "description": "Common network state",
            "fields": [
                {"name": "state", "type": "uint8_t", "description": "Operational state"},
                {"name": "if_flags", "type": "uint32_t", "description": "Interface flags"},
                {"name": "l2_flags", "type": "uint16_t", "description": "L2 flags"},
                {"name": "mtu", "type": "uint16_t", "description": "Maximum transmission unit"},
                {"name": "ipv4", "type": "struct rpc_struct_ipv4_address", "description": "Self IPv4 address"},
                {"name": "ipv6", "type": "struct rpc_struct_ipv6_address", "description": "Self IPv6 address"}
            ]
        },
        "rpc_struct_wifi_state": {
            "description": "WiFi interface status",
            "fields": [
                {"name": "state", "type": "uint8_t", "description": "Operational state"},
                {"name": "ssid", "type": "char", "num": 32, "description": "Service Set Identifier (Network Name)"},
                {"name": "bssid", "type": "char", "num": 6, "description": "Basic Service Set Identifier (MAC address)"},
                {"name": "band", "type": "uint8_t", "description": "Frequency band"},
                {"name": "channel", "type": "uint8_t", "description": "Channel index"},
                {"name": "iface_mode", "type": "uint8_t", "description": "https://w1.fi/wpa_supplicant/devel/defs_8h.html#a4aeb27c1e4abd046df3064ea9756f0bc"},
                {"name": "link_mode", "type": "uint8_t", "description": "WiFi link operating mode (https://en.wikipedia.org/wiki/Wi-Fi#Versions_and_generations)"},
                {"name": "security", "type": "uint8_t", "description": "IEEE 802.11 security type"},
                {"name": "rssi", "type": "int8_t", "description": "Received signal strength (dBm)"},
                {"name": "beacon_interval", "type": "uint16_t", "description": "Beacon interval (ms)"},
                {"name": "twt_capable", "type": "uint8_t", "description": "Target Wake Time capable?"}
            ]
        },
        "rpc_struct_lte_state": {
            "description": "LTE interface status",
            "fields": [
                {"name": "registration_state", "type": "uint8_t", "description": "Network registration state"},
                {"name": "access_technology", "type": "uint8_t", "description": "0 = None, 7 = LTE-M, 9 = NB-IoT"},
                {"name": "mcc", "type": "uint16_t", "description": "Mobile Country Code"},
                {"name": "mnc", "type": "uint16_t", "description": "Mobile Network Code"},
                {"name": "cell_id", "type": "uint32_t", "description": "E-UTRAN cell ID"},
                {"name": "tac", "type": "uint32_t", "description": "Tracking area code"},
                {"name": "tau", "type": "uint32_t", "description": "Tracking area update period"},
                {"name": "earfcn", "type": "uint16_t", "description": "Tracking area code (3GPP TS 36.101)"},
                {"name": "band", "type": "uint8_t", "description": "LTE Band (3GPP 36.101)"},
                {"name": "psm_active_time", "type": "uint16_t", "description": "Seconds between RRC idle and PSM"},
                {"name": "edrx_interval", "type": "float", "description": "Period between eDRX paging windows"},
                {"name": "edrx_paging_window", "type": "float", "description": "Duration of eDRX paging window"},
                {"name": "rsrp", "type": "int16_t", "description": "Reference signal received power (dBm)"},
                {"name": "rsrq", "type": "int8_t", "description": "Reference signal received quality (dB)"}
            ]
        },
        "rpc_struct_wifi_scan_result": {
            "description": "WiFi interface status",
            "fields": [
                {"name": "band", "type": "uint8_t", "description": "Frequency band"},
                {"name": "channel", "type": "uint8_t", "description": "Channel index"},
                {"name": "security", "type": "uint8_t", "description": "IEEE 802.11 security type"},
                {"name": "rssi", "type": "int8_t", "description": "Received signal strength (dBm)"},
                {"name": "bssid", "type": "char", "num": 6, "description": "Basic Service Set Identifier (MAC address)"},
                {"name": "ssid_len", "type": "uint8_t", "description": "SSID length"},
                {"name": "ssid", "type": "char", "num": 0, "description": "Service Set Identifier (Network Name)"}
            ]
        }
    },
    "enums": {
        "rpc_enum_bt_le_addr_type": {
            "description": "Bluetooth LE address type",
            "type": "uint8_t",
            "values": [
                {"name": "PUBLIC", "value": 0, "description": "Public address"},
                {"name": "RANDOM", "value": 1, "description": "Static random address"}
            ]
        },
        "rpc_enum_file_action": {
            "description": "Actions to take upon receiving a file",
            "type": "uint8_t",
            "values": [
                {"name": "DISCARD", "value": 0, "description": "Discard received file (Useful for testing)"},
                {"name": "APP_IMG", "value": 1, "description": "Complete application image for firmware upgrade"},
                {"name": "BT_CTLR_IMG", "value": 2, "description": "Complete Bluetooth controller image for firmware upgrade"},
                {"name": "APP_CPATCH", "value": 11, "description": "CPatch application image upgrade (binary diff)"},
                {"name": "NRF91_MODEM_DIFF", "value": 20, "description": "nRF91 LTE modem firmware upgrade diff"}
            ]
        },
        "rpc_enum_infuse_bt_characteristic": {
            "description": "Infuse-IoT Bluetooth characteristics (Bitmask)",
            "type": "uint8_t",
            "values": [
                {"name": "COMMAND", "value": 1, "description": "Command characteristic"},
                {"name": "DATA", "value": 2, "description": "Data characteristic"},
                {"name": "LOGGING", "value": 4, "description": "Serial log characteristic"}
            ]
        }
    },
    "commands": {
        "1": {
            "name": "reboot",
            "description": "Reboot the device after a delay",
            "depends_on": "INFUSE_REBOOT",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "delay_ms", "type": "uint32_t", "description": "Requested delay (0 == default)"}
            ],
            "response_params": [
                {"name": "delay_ms", "type": "uint32_t", "description": "Duration until reboot"}
            ]
        },
        "2": {
            "name": "fault",
            "description": "Immediately trigger an exception on the device",
            "depends_on": "INFUSE_REBOOT && ARM",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "fault", "type": "uint8_t", "description": "K_ERR_* fault type to trigger"},
                {"name": "zero", "type": "uint32_t", "description": "Zero that the compiler doesn't know about"}

            ],
            "response_params": []
        },
        "3": {
            "name": "time_get",
            "description": "Get the current time knowledge of the device",
            "depends_on": "INFUSE_EPOCH_TIME",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_NETWORK",
            "request_params": [],
            "response_params": [
                {"name": "time_source", "type": "uint8_t", "description": "Source of the time knowledge"},
                {"name": "epoch_time", "type": "uint64_t", "description": "Current epoch time on the device"},
                {"name": "sync_age", "type": "uint32_t", "description": "How old the time knowledge is (seconds)"}
            ]
        },
        "4": {
            "name": "time_set",
            "description": "Set the current time of the device",
            "depends_on": "INFUSE_EPOCH_TIME",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "epoch_time", "type": "uint64_t", "description": "Current epoch time on the device"}

            ],
            "response_params": []
        },
        "5": {
            "name": "kv_write",
            "description": "Write values to the KV store",
            "depends_on": "KV_STORE",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "num", "type": "uint8_t", "description": "Number of values in buffer"},
                {"name": "values", "type": "struct rpc_struct_kv_store_value", "num": 0, "description": "Array of KV values"}
            ],
            "response_params": [
                {"name": "rc", "type": "int16_t", "num": 0, "description": "Result of writes"}
             ]
        },
        "6": {
            "name": "kv_read",
            "description": "Read values from the KV store",
            "depends_on": "KV_STORE",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "num", "type": "uint8_t", "description": "Number of values to read"},
                {"name": "keys", "type": "uint16_t", "num": 0, "description": "Array of KV keys"}
            ],
            "response_params": [
                {"name": "values", "type": "struct rpc_struct_kv_store_value", "num": 0, "description": "Array of KV values"}
            ]
        },
        "7": {
            "name": "kv_reflect_crcs",
            "description": "Read KV store CRC's",
            "depends_on": "KV_STORE",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "offset", "type": "uint16_t", "description": "Number of CRCs to skip in response"}
            ],
            "response_params": [
                {"name": "num", "type": "uint16_t", "description": "Number of CRCs in crcs array"},
                {"name": "remaining", "type": "uint16_t", "description": "Number of CRCs that did not fit in this response"},
                {"name": "crcs", "type": "struct rpc_struct_kv_store_crc", "num": 0, "description": "Array of KV CRCs"}
            ]
        },
        "8": {
            "name": "zbus_channel_state",
            "description": "Query current state of zbus channel",
            "depends_on": "ZBUS",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "channel_id", "type": "uint32_t", "description": "Channel ID to query"}
            ],
            "response_params": [
                {"name": "publish_timestamp", "type": "uint64_t", "description": "Epoch time of last data publish"},
                {"name": "publish_count", "type": "uint32_t", "description": "Number of times data has been published to channel"},
                {"name": "publish_period_avg_ms", "type": "uint32_t", "description": "Average time between publishing"},
                {"name": "data", "type": "uint8_t", "num": 0, "description": "Channel data"}
            ]
        },
        "9": {
            "name": "application_info",
            "description": "Query basic application versions and state",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_NETWORK",
            "request_params": [],
            "response_params": [
                {"name": "application_id", "type": "uint32_t", "description": "Application ID"},
                {"name": "version", "type": "struct rpc_struct_mcuboot_img_sem_ver", "description": "Application version number"},
                {"name": "network_id", "type": "uint32_t", "description": "Current Infuse network ID"},
                {"name": "uptime", "type": "uint32_t", "description": "Application uptime"},
                {"name": "reboots", "type": "uint32_t", "description": "Application reboot count"},
                {"name": "kv_crc", "type": "uint32_t", "description": "Key-Value store reflect global CRC"},
                {"name": "data_blocks_internal", "type": "uint32_t", "description": "Data blocks logged to internal flash"},
                {"name": "data_blocks_external", "type": "uint32_t", "description": "Data blocks logged to external flash"}
            ]
        },
        "10": {
            "name": "wifi_scan",
            "description": "Scan for WiFi networks",
            "depends_on": "WIFI",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [],
            "response_params": [
                {"name": "network_count", "type": "uint8_t", "description": "Number of scanned networks"},
                {"name": "networks", "type": "struct rpc_struct_wifi_scan_result", "num": 0, "description": "Array of scanned networks"}
            ]
        },
        "11": {
            "name": "wifi_state",
            "description": "Get current WiFi interface state",
            "depends_on": "WIFI",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [],
            "response_params": [
                {"name": "common", "type": "struct rpc_struct_network_state", "description": "Common network state"},
                {"name": "wifi", "type": "struct rpc_struct_wifi_state", "description": "WiFi state"}
            ]
        },
        "12": {
            "name": "last_reboot",
            "description": "Retrieve information pertaining to the previous reboot",
            "depends_on": "INFUSE_COMMON_BOOT",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [],
            "response_params": [
                {"name": "reason", "type": "uint8_t", "description": "Reboot reason (enum infuse_reboot_reason)"},
                {"name": "epoch_time_source", "type": "uint8_t", "description": "Time source at reboot"},
                {"name": "epoch_time", "type": "uint64_t", "description": "Epoch time at reboot"},
                {"name": "hardware_flags", "type": "uint32_t", "description": "Hardware flags (hwinfo_get_reset_cause)", "display_fmt": "hex"},
                {"name": "uptime", "type": "uint32_t", "description": "Uptime before reboot (seconds)"},
                {"name": "param_1", "type": "uint32_t", "description": "Program counter/Watchdog Info/Other", "display_fmt": "hex"},
                {"name": "param_2", "type": "uint32_t", "description": "Link Register/Watchdog Info/Other", "display_fmt": "hex"},
                {"name": "thread", "type": "char", "num": 8, "description": "Running thread at reboot"}
            ]
        },
        "20": {
            "name": "lte_at_cmd",
            "description": "Run AT command against LTE modem",
            "depends_on": "NRF_MODEM_LIB",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "cmd", "type": "char", "num": 0, "description": "AT command string"}
            ],
            "response_params": [
                {"name": "rsp", "type": "char", "num": 0, "description": "AT command response"}
            ]
        },
        "21": {
            "name": "lte_state",
            "description": "Get current LTE interface state",
            "depends_on": "INFUSE_NRF_MODEM_MONITOR",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [],
            "response_params": [
                {"name": "common", "type": "struct rpc_struct_network_state", "description": "Common network state"},
                {"name": "lte", "type": "struct rpc_struct_lte_state", "description": "LTE state"}
            ]
        },
        "30": {
            "name": "coap_download",
            "description": "Download a file from a COAP server (Infuse-IoT DTLS protected)",
            "depends_on": "INFUSE_COAP",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "server_address", "type": "char", "num": 48,  "description": "COAP server address (e.g. coap.dev.infuse-iot.com)"},
                {"name": "server_port", "type": "uint16_t", "description": "COAP server port"},
                {"name": "block_timeout_ms", "type": "uint16_t", "description": "COAP block timeout (Default 1000ms)"},
                {"name": "action", "type": "enum rpc_enum_file_action", "description": "Action to apply to downloaded file"},
                {"name": "resource_len", "type": "uint32_t", "description": "Expected resource length (UINT32_MAX if unknown)"},
                {"name": "resource_crc", "type": "uint32_t", "description": "Expected resource CRC (UINT32_MAX if unknown)"},
                {"name": "resource", "type": "char", "num": 0, "description": "Path to file on COAP server (e.g. files/small_file)"}
            ],
            "response_params": [
                {"name": "resource_len", "type": "uint32_t", "description": "Length of resource downloaded"},
                {"name": "resource_crc", "type": "uint32_t", "description": "CRC of resource downloaded"}
            ]
        },
        "40": {
            "name": "file_write_basic",
            "description": "Write a file to the device",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_NETWORK",
            "rpc_data": true,
            "request_params": [
                {"name": "action", "type": "enum rpc_enum_file_action", "description": "Action to apply to written file"},
                {"name": "file_crc", "type": "uint32_t", "description": "Expected file CRC"}
            ],
            "response_params": [
                {"name": "recv_len", "type": "uint32_t", "description": "Number of bytes received"},
                {"name": "recv_crc", "type": "uint32_t", "description": "CRC of bytes received"}
            ]
        },
        "50": {
            "name": "bt_connect_infuse",
            "description": "Connect to an Infuse-IoT Bluetooth device",
            "depends_on": "EPACKET_INTERFACE_BT_CENTRAL",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "peer", "type": "struct rpc_struct_bt_addr_le", "description": "Bluetooth LE device to connect to"},
                {"name": "conn_timeout_ms", "type": "uint16_t", "description": "Connection timeout in milliseconds"},
                {"name": "subscribe", "type": "enum rpc_enum_infuse_bt_characteristic", "description": "Chacteristics to subscribe to"},
                {"name": "inactivity_timeout_ms", "type": "uint16_t", "description": "Automatically terminate connection if no data traffic (0 = No timeout)"}
            ],
            "response_params": [
                {"name": "cloud_public_key", "type": "uint8_t", "num": 32, "description": "Cloud public ECC key"},
                {"name": "device_public_key", "type": "uint8_t", "num": 32, "description": "Device public ECC key"},
                {"name": "network_id", "type": "uint32_t", "description": "Current network ID"}
            ]
        },
        "51": {
            "name": "bt_disconnect",
            "description": "Disconnect from a Bluetooth device",
            "depends_on": "BT_GATT_CLIENT",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "peer", "type": "struct rpc_struct_bt_addr_le", "description": "Bluetooth LE device to disconnect from"}
            ],
            "response_params": [
            ]
        },
        "30000": {
            "name": "security_state",
            "description": "Query current security state and validate identity",
            "default": "y if INFUSE_SECURITY",
            "default_auth": "EPACKET_AUTH_NETWORK",
            "request_params": [
                {"name": "challenge", "type": "uint8_t", "num": 16, "description": "Random challenge data"}
            ],
            "response_params": [
                {"name": "cloud_public_key", "type": "uint8_t", "num": 32, "description": "Cloud public ECC key"},
                {"name": "device_public_key", "type": "uint8_t", "num": 32, "description": "Device public ECC key"},
                {"name": "network_id", "type": "uint32_t", "description": "Current network ID"},
                {"name": "challenge_response_type", "type": "uint8_t", "description": "Type of the challenge response"},
                {"name": "challenge_response", "type": "uint8_t", "num": 0, "description": "Challenge response data"}
            ]
        },
        "32765": {
            "name": "data_sender",
            "description": "Send multiple INFUSE_RPC_DATA packets",
            "depends_on": "ENTROPY_GENERATOR",
            "default": "y if ZTEST",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "rpc_data": true,
            "request_params": [],
            "response_params": []
        },
        "32766": {
            "name": "data_receiver",
            "description": "Receive multiple INFUSE_RPC_DATA packets",
            "depends_on": "CRC",
            "default": "y if ZTEST",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "rpc_data": true,
            "request_params": [],
            "response_params": [
                {"name": "recv_len", "type": "uint32_t", "description": "Number of bytes received"},
                {"name": "recv_crc", "type": "uint32_t", "description": "CRC32 of bytes received"}
            ]
        },
        "32767": {
            "name": "echo",
            "description": "Echo any input data in the response",
            "default": "y if ZTEST",
            "default_auth": "EPACKET_AUTH_NETWORK",
            "request_params": [
                {"name": "array", "type": "uint8_t", "num": 0, "description": "Binary data"}
            ],
            "response_params": [
                {"name": "array", "type": "uint8_t", "num": 0, "description": "Binary data"}
            ]
        }
    }
}
