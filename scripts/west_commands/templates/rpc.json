{
    "structs": {
        "rpc_struct_mcuboot_img_sem_ver": {
            "description": "MCUboot semantic versioning struct",
            "fields": [
                {"name": "major", "type": "uint8_t"},
                {"name": "minor", "type": "uint8_t"},
                {"name": "revision", "type": "uint16_t"},
                {"name": "build_num", "type": "uint32_t"}
            ]
        },
        "rpc_struct_kv_store_value": {
            "description": "KV store data value",
            "fields": [
                {"name": "id", "type": "uint16_t"},
                {"name": "len", "type": "int16_t"},
                {"name": "data", "type": "uint8_t", "num": 0}
            ]
        },
        "rpc_struct_ipv4_address": {
            "description": "IPv4 address",
            "fields": [
                {"name": "addr", "type": "uint8_t", "num": 4}
            ]
        },
        "rpc_struct_ipv6_address": {
            "description": "IPv6 address",
            "fields": [
                {"name": "addr", "type": "uint8_t", "num": 16}
            ]
        },
        "rpc_struct_network_state": {
            "description": "Common network state",
            "fields": [
                {"name": "state", "type": "uint8_t", "description": "Operational state"},
                {"name": "if_flags", "type": "uint32_t", "description": "Interface flags"},
                {"name": "l2_flags", "type": "uint16_t", "description": "L2 flags"},
                {"name": "mtu", "type": "uint16_t", "description": "Maximum transmission unit"},
                {"name": "ipv4", "type": "struct rpc_struct_ipv4_address", "description": "Self IPv4 address"},
                {"name": "ipv6", "type": "struct rpc_struct_ipv6_address", "description": "Self IPv6 address"}
            ]
        },
        "rpc_struct_wifi_state": {
            "description": "WiFi interface status",
            "fields": [
                {"name": "state", "type": "uint8_t", "description": "Operational state"},
                {"name": "ssid", "type": "char", "num": 32, "description": "Service Set Identifier (Network Name)"},
                {"name": "bssid", "type": "char", "num": 6, "description": "Basic Service Set Identifier (MAC address)"},
                {"name": "band", "type": "uint8_t", "description": "Frequency band"},
                {"name": "channel", "type": "uint8_t", "description": "Channel index"},
                {"name": "iface_mode", "type": "uint8_t", "description": "https://w1.fi/wpa_supplicant/devel/defs_8h.html#a4aeb27c1e4abd046df3064ea9756f0bc"},
                {"name": "link_mode", "type": "uint8_t", "description": "WiFi link operating mode (https://en.wikipedia.org/wiki/Wi-Fi#Versions_and_generations)"},
                {"name": "security", "type": "uint8_t", "description": "IEEE 802.11 security type"},
                {"name": "rssi", "type": "int8_t", "description": "Received signal strength (dBm)"},
                {"name": "beacon_interval", "type": "uint16_t", "description": "Beacon interval (ms)"},
                {"name": "twt_capable", "type": "uint8_t", "description": "Target Wake Time capable?"}
            ]
        },
        "rpc_struct_wifi_scan_result": {
            "description": "WiFi interface status",
            "fields": [
                {"name": "band", "type": "uint8_t", "description": "Frequency band"},
                {"name": "channel", "type": "uint8_t", "description": "Channel index"},
                {"name": "security", "type": "uint8_t", "description": "IEEE 802.11 security type"},
                {"name": "rssi", "type": "int8_t", "description": "Received signal strength (dBm)"},
                {"name": "bssid", "type": "char", "num": 6, "description": "Basic Service Set Identifier (MAC address)"},
                {"name": "ssid_len", "type": "uint8_t", "description": "SSID length"},
                {"name": "ssid", "type": "char", "num": 0, "description": "Service Set Identifier (Network Name)"}
            ]
        }
    },
    "commands": {
        "1": {
            "name": "reboot",
            "description": "Reboot the device after a delay",
            "depends_on": "INFUSE_REBOOT",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "delay_ms", "type": "uint32_t", "description": "Requested delay (0 == default)"}
            ],
            "response_params": [
                {"name": "delay_ms", "type": "uint32_t", "description": "Duration until reboot"}
            ]
        },
        "2": {
            "name": "fault",
            "description": "Immediately trigger an exception on the device",
            "depends_on": "INFUSE_REBOOT && ARM",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "fault", "type": "uint8_t", "description": "K_ERR_* fault type to trigger"},
                {"name": "zero", "type": "uint32_t", "description": "Zero that the compiler doesn't know about"}

            ],
            "response_params": []
        },
        "3": {
            "name": "time_get",
            "description": "Get the current time knowledge of the device",
            "depends_on": "INFUSE_CIVIL_TIME",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_NETWORK",
            "request_params": [],
            "response_params": [
                {"name": "time_source", "type": "uint8_t", "description": "Source of the time knowledge"},
                {"name": "civil_time", "type": "uint64_t", "description": "Current civil time on the device"},
                {"name": "sync_age", "type": "uint32_t", "description": "How old the time knowledge is (seconds)"}
            ]
        },
        "4": {
            "name": "time_set",
            "description": "Set the current time of the device",
            "depends_on": "INFUSE_CIVIL_TIME",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "civil_time", "type": "uint64_t", "description": "Current civil time on the device"}

            ],
            "response_params": []
        },
        "5": {
            "name": "kv_write",
            "description": "Write values to the KV store",
            "depends_on": "KV_STORE",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "num", "type": "uint8_t", "description": "Number of values in buffer"},
                {"name": "values", "type": "struct rpc_struct_kv_store_value", "num": 0, "description": "Array of KV values"}
            ],
            "response_params": [
                {"name": "rc", "type": "int16_t", "num": 0, "description": "Result of writes"}
             ]
        },
        "6": {
            "name": "kv_read",
            "description": "Read values from the KV store",
            "depends_on": "KV_STORE",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [
                {"name": "num", "type": "uint8_t", "description": "Number of values to read"},
                {"name": "keys", "type": "uint16_t", "num": 0, "description": "Array of KV keys"}
            ],
            "response_params": [
                {"name": "values", "type": "struct rpc_struct_kv_store_value", "num": 0, "description": "Array of KV values"}
            ]
        },
        "10": {
            "name": "wifi_scan",
            "description": "Scan for WiFi networks",
            "depends_on": "WIFI",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [],
            "response_params": [
                {"name": "network_count", "type": "uint8_t", "description": "Number of scanned networks"},
                {"name": "networks", "type": "struct rpc_struct_wifi_scan_result", "num": 0, "description": "Array of scanned networks"}
            ]
        },
        "11": {
            "name": "wifi_state",
            "description": "Get current WiFi interface state",
            "depends_on": "WIFI",
            "default": "y if INFUSE_SDK",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "request_params": [],
            "response_params": [
                {"name": "common", "type": "struct rpc_struct_network_state", "description": "Common network state"},
                {"name": "wifi", "type": "struct rpc_struct_wifi_state", "description": "WiFi state"}
            ]
        },
        "30000": {
            "name": "security_state",
            "description": "Query current security state and validate identity",
            "default": "y if INFUSE_SECURITY",
            "default_auth": "EPACKET_AUTH_NETWORK",
            "request_params": [
                {"name": "challenge", "type": "uint8_t", "num": 16, "description": "Random challenge data"}
            ],
            "response_params": [
                {"name": "cloud_public_key", "type": "uint8_t", "num": 32, "description": "Cloud public ECC key"},
                {"name": "device_public_key", "type": "uint8_t", "num": 32, "description": "Device public ECC key"},
                {"name": "network_id", "type": "uint32_t", "description": "Current network ID"},
                {"name": "challenge_response_type", "type": "uint8_t", "description": "Type of the challenge response"},
                {"name": "challenge_response", "type": "uint8_t", "num": 0, "description": "Type of the challenge response"}
            ]
        },
        "32765": {
            "name": "data_sender",
            "description": "Send multiple INFUSE_RPC_DATA packets",
            "depends_on": "ENTROPY_GENERATOR",
            "default": "y if ZTEST",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "rpc_data": true,
            "request_params": [],
            "response_params": []
        },
        "32766": {
            "name": "data_receiver",
            "description": "Receive multiple INFUSE_RPC_DATA packets",
            "default": "y if ZTEST",
            "default_auth": "EPACKET_AUTH_DEVICE",
            "rpc_data": true,
            "request_params": [],
            "response_params": [
                {"name": "received", "type": "uint32_t", "description": "Number of bytes received"}
            ]
        },
        "32767": {
            "name": "echo",
            "description": "Echo any input data in the response",
            "default": "y if ZTEST",
            "default_auth": "EPACKET_AUTH_NETWORK",
            "request_params": [
                {"name": "array", "type": "uint8_t", "num": 0, "description": "Binary data"}
            ],
            "response_params": [
                {"name": "array", "type": "uint8_t", "num": 0, "description": "Binary data"}
            ]
        }
    }
}
