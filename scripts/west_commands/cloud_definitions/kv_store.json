{
    "structs": {
        "gcs_location": {
            "description": "Geographic Co-ordinate System location",
            "fields": [
                {"name": "latitude", "type": "int32_t", "description": "Degrees north/south, scaled by 1e-7"},
                {"name": "longitude", "type": "int32_t", "description": "Degrees north/south, scaled by 1e-7"},
                {"name": "height", "type": "int32_t", "description": "Height above WGS-84 ellipsoid, mm"}
            ]
        },
        "bt_addr_le": {
            "description": "Bluetooth address type (bt_addr_le_t)",
            "fields": [
                {"name": "type", "type": "uint8_t", "description": "Address type (0 == Public, 1 == Random)"},
                {"name": "val", "type": "uint8_t", "num": 6, "description": "Address bytes"}
            ]
        },
        "kv_string": {
            "description": "String type",
            "fields": [
                {"name": "value", "type": "char", "num": 0, "description": "NULL terminated C string"}
            ]
        },
        "kv_mcuboot_img_sem_ver": {
            "description": "MCUboot semantic versioning struct",
            "fields": [
                {"name": "major", "type": "uint8_t"},
                {"name": "minor", "type": "uint8_t"},
                {"name": "revision", "type": "uint16_t"},
                {"name": "build_num", "type": "uint32_t"}
            ]
        },
        "kv_range_u8": {
            "description": "Generic range structure",
            "fields": [
                {"name": "lower", "type": "uint8_t"},
                {"name": "upper", "type": "uint8_t"}
            ]
        }
    },
    "definitions": {
        "0": {
            "name": "REBOOTS",
            "description": "Number of times device has rebooted",
            "fields": [
                {"name": "count", "type": "uint32_t"}
            ]
        },
        "1": {
            "name": "BLUETOOTH_ADDR",
            "description": "Bluetooth advertising address",
            "reflect": true,
            "read_only": true,
            "default": "y if BT",
            "fields": [
                {"name": "address", "type": "struct bt_addr_le", "description": "Broadcasting address"}
            ]
        },
        "2": {
            "name": "EXFAT_DISK_INFO",
            "description": "exFAT disk information",
            "reflect": true,
            "read_only": true,
            "default": "y if DATA_LOGGER_EXFAT",
            "fields": [
                {"name": "block_count", "type": "uint32_t", "description": "Disk block count"},
                {"name": "block_size", "type": "uint32_t", "description": "Disk block size"}
            ]
        },
        "3": {
            "name": "BLUETOOTH_CTLR_VERSION",
            "description": "External Bluetooth controller version",
            "reflect": true,
            "depends_on": "!BT_CTLR",
            "default": "y if BT",
            "fields": [
                {"name": "application", "type": "uint32_t", "description": "Application ID"},
                {"name": "version", "type": "struct kv_mcuboot_img_sem_ver", "description": "Application version number"}
            ]
        },
        "4": {
            "name": "DEVICE_NAME",
            "description": "Personalised name for the device",
            "reflect": true,
            "default": "y",
            "fields": [
                {"name": "name", "type": "struct kv_string", "description": "Personalised device name"}
            ]
        },
        "5": {
            "name": "INFUSE_APPLICATION_ID",
            "description": "CONFIG_INFUSE_APPLICATION_ID, store will be reset if the values don't match",
            "fields": [
                {"name": "application_id", "type": "uint32_t"}
            ]
        },
        "10": {
            "name": "FIXED_LOCATION",
            "description": "Fixed global location of the device",
            "reflect": true,
            "fields": [
                {"name": "location", "type": "struct gcs_location", "description": "Location"}
            ]
        },
        "20": {
            "name": "WIFI_SSID",
            "description": "WiFi network name",
            "reflect": true,
            "default": "y if WIFI",
            "fields": [
                {"name": "ssid", "type": "struct kv_string", "description": "WiFi network name"}
            ]
        },
        "21": {
            "name": "WIFI_PSK",
            "description": "WiFi network password",
            "reflect": true,
            "write_only": true,
            "default": "y if WIFI",
            "fields": [
                {"name": "psk", "type": "struct kv_string", "description": "WiFi pre-shared-key"}
            ]
        },
        "22": {
            "name": "WIFI_CHANNELS",
            "description": "WiFi band and channel configuration",
            "reflect": true,
            "default": "y if WIFI",
            "fields": [
                {"name": "band", "type": "uint8_t", "description": "WiFi frequency band (0 = 2.4Ghz, 1 = 5GHz, 2 = 6Ghz, other = Unknown)"},
                {"name": "channels", "type": "uint8_t", "num": 0, "description": "WiFi channels network uses"}
            ]
        },
        "30": {
            "name": "NTP_SERVER_URL",
            "description": "URL of the NTP server to use for time synchronisation",
            "reflect": true,
            "default": "y if SNTP",
            "fields": [
                {"name": "url", "type": "struct kv_string", "description": "NTP server URL"}
            ]
        },
        "31": {
            "name": "EPACKET_UDP_URL",
            "description": "ePacket UDP server hostname",
            "reflect": true,
            "default": "y if EPACKET_INTERFACE_UDP",
            "fields": [
                {"name": "server", "type": "struct kv_string", "description": "UDP server hostname"}
            ]
        },
        "32": {
            "name": "EPACKET_UDP_PORT",
            "description": "ePacket UDP server port",
            "reflect": true,
            "default": "y if EPACKET_INTERFACE_UDP",
            "fields": [
                {"name": "port", "type": "uint32_t", "description": "UDP server port"}
            ]
        },
        "40": {
            "name": "LTE_MODEM_MODEL",
            "description": "Modem model as returned by AT+CGMM",
            "reflect": true,
            "read_only": true,
            "default": "y if NRF_MODEM_LIB",
            "fields": [
                {"name": "model", "type": "struct kv_string", "description": "Modem model"}
            ]
        },
        "41": {
            "name": "LTE_MODEM_FIRMWARE_REVISION",
            "description": "Modem firmware revision as returned by AT+CGMR",
            "reflect": true,
            "read_only": true,
            "default": "y if NRF_MODEM_LIB",
            "fields": [
                {"name": "revision", "type": "struct kv_string", "description": "Firmware revision"}
            ]
        },
        "42": {
            "name": "LTE_MODEM_ESN",
            "description": "'Electronic Serial Number' as returned by AT+CGSN=0",
            "reflect": true,
            "read_only": true,
            "default": "y if NRF_MODEM_LIB",
            "fields": [
                {"name": "esn", "type": "struct kv_string", "description": "ESN or IMEI if not available"}
            ]
        },
        "43": {
            "name": "LTE_MODEM_IMEI",
            "description": "'International Modem Equiment Identifier' as returned by AT+CGSN=1",
            "reflect": true,
            "read_only": true,
            "default": "y if NRF_MODEM_LIB",
            "fields": [
                {"name": "imei", "type": "uint64_t", "description": "15 digit IMEI"}
            ]
        },
        "44": {
            "name": "LTE_SIM_UICC",
            "description": "SIM Universal Identifier (https://www.itu.int/en/ITU-T/inr/forms/Pages/iin.aspx)",
            "reflect": true,
            "read_only": true,
            "default": "y if NRF_MODEM_LIB",
            "fields": [
                {"name": "uicc", "type": "struct kv_string", "description": "Variable length UICC string"}
            ]
        },
        "45": {
            "name": "LTE_PDP_CONFIG",
            "description": "Packet Data Protocol (PDP) default context configuration",
            "reflect": true,
            "default": "y if NRF_MODEM_LIB",
            "fields": [
                {"name": "family", "type": "uint8_t", "description": "Protocol family (0 = IPv4, 1 = IPv6, 2 = IPv4v6, 3 = Non-IP)"},
                {"name": "apn", "type": "struct kv_string", "description": "Access Point Name"}
            ]
        },
        "46": {
            "name": "LTE_NETWORKING_MODES",
            "description": "Enabled LTE networking modes and preferences",
            "reflect": true,
            "default": "y if NRF_MODEM_LIB",
            "fields": [
                {"name": "modes", "type": "uint8_t", "description": "Enabled modes as per `enum lte_lc_system_mode`"},
                {"name": "prefer", "type": "uint8_t", "description": "Preference as per `enum lte_lc_system_mode_preference`"}
            ]
        },
        "50": {
            "name": "BLUETOOTH_PEER",
            "description": "Bluetooth peer device",
            "reflect": true,
            "fields": [
                {"name": "address", "type": "struct bt_addr_le", "description": "Peer device Bluetooth address"}
            ]
        },
        "51": {
            "name": "LORA_CONFIG",
            "description": "LoRa modem configuration",
            "depends_on": "LORA",
            "default": "y",
            "reflect": true,
            "fields": [
                {"name": "frequency", "type": "uint32_t", "description": "Frequency (Hz)"},
                {"name": "bandwidth", "type": "uint8_t", "description": "Signal bandwidth (see enum lora_signal_bandwidth)"},
                {"name": "spreading_factor", "type": "uint8_t", "description": "Spreading factor (see enum lora_datarate)"},
                {"name": "coding_rate", "type": "uint8_t", "description": "Coding rate (see enum lora_coding_rate)"},
                {"name": "preamble_len", "type": "uint16_t", "description": "Preamble length"},
                {"name": "tx_power", "type": "int8_t", "description": "Transmit power (dBm)"},
                {"name": "sync_word", "type": "uint8_t", "description": "Custom sync word"}
            ]
        },
        "60": {
            "name": "GRAVITY_REFERENCE",
            "description": "Reference gravity vector for tilt calculations",
            "reflect": true,
            "fields": [
                {"name": "x", "type": "int16_t", "description": "X axis component of gravity vector"},
                {"name": "y", "type": "int16_t", "description": "Y axis component of gravity vector"},
                {"name": "z", "type": "int16_t", "description": "Z axis component of gravity vector"}
            ]
        },
        "100": {
            "name": "GEOFENCE",
            "range": 16,
            "description": "Array of points defining a closed polygon",
            "reflect": true,
            "fields": [
                {"name": "points", "type": "struct gcs_location", "num": 0, "description": "Points in geofence"}
            ]
        },
        "1000": {
            "name": "TASK_SCHEDULES_DEFAULT_ID",
            "description": "Unique identifier for default schedule set",
            "reflect": true,
            "default": "y if TASK_RUNNER",
            "fields": [
                {"name": "set_id", "type": "uint32_t", "description": "If this value changes, existing schedules are overwritten"}
            ]
        },
        "1001": {
            "name": "TASK_SCHEDULES",
            "range": 32,
            "range_default": 16,
            "description": "Task runner task schedule definition (@ref task_schedule)",
            "reflect": true,
            "default": "y if TASK_RUNNER",
            "fields": [
                {"name": "task_id", "type": "uint8_t", "description": "Task ID referenced by schedule"},
                {"name": "validity", "type": "uint8_t", "description": "TASK_VALID_* value"},
                {"name": "periodicity_type", "type": "uint8_t", "description": "TASK_PERIODICITY_* value"},
                {"name": "timeout_s", "type": "uint32_t", "description": "Duration after which task is requested to terminate"},
                {"name": "battery_start", "type": "struct kv_range_u8", "description": "Battery charge thresholds to start the task"},
                {"name": "battery_terminate", "type": "struct kv_range_u8", "description": "Battery charge thresholds to terminate the task"},
                {"name": "periodicity", "type": "uint32_t", "description": "Periodicity values"},
                {"name": "_remainder", "type": "uint8_t", "num": 0, "description": "Remainder of schedule struct"}
            ]
        },
        "30000": {
            "name": "SECURE_STORAGE_RESERVED",
            "range": 10,
            "description": "Keys reserved for secure storage (do not enable)",
            "depends_on": "!INFUSE_SDK",
            "fields": [
                {"name": "data", "type": "uint8_t", "num": 0, "description": "Opaque data"}
            ]
        }
    }
}
