# Infuse Data Logging backends

config DATA_LOGGER_EPACKET
	bool "Logging to ePacket instance"
	depends on DT_HAS_EMBEINT_DATA_LOGGER_EPACKET_ENABLED
	depends on EPACKET
	default y

config DATA_LOGGER_FLASH_MAP
	bool "Logging to flash_map instance"
	depends on DT_HAS_EMBEINT_DATA_LOGGER_FLASH_MAP_ENABLED
	depends on FLASH_MAP
	default y

config DATA_LOGGER_EXFAT
	bool "Logging to exFAT filesystem"
	depends on DT_HAS_EMBEINT_DATA_LOGGER_EXFAT_ENABLED
	select FILE_SYSTEM
	select DISK_ACCESS
	select FAT_FILESYSTEM_ELM
	select FS_FATFS_EXFAT
	select FS_FATFS_HAS_RTC
	select FS_FATFS_USE_LABEL
	select FS_FATFS_USE_EXPAND
	select FS_FATFS_USE_FIND
	default y
	help
	  Data is stored on an exFAT filesystem in `.bin` files. Note that the
	  exFAT filesystem is not resilient to power-loss. The backend attempts
	  to mitigate the chances of data corruption through minimising file
	  allocation table updates as much as possible. Updates can be tuned
	  through DATA_LOGGER_EXFAT_STORAGE_STRATEGY and
	  DATA_LOGGER_EXFAT_FILE_SIZE.

if DATA_LOGGER_EXFAT

module = DATA_LOGGER_EXFAT
module-str = Data Logger exFAT
source "subsys/logging/Kconfig.template.log_config"

choice DATA_LOGGER_EXFAT_STORAGE_STRATEGY
	prompt "How to store data on exFAT filesystem"
	default DATA_LOGGER_EXFAT_MULTI_FILE

config DATA_LOGGER_EXFAT_MULTI_FILE
	bool "Split data across multiple files"
	help
	  Split data across files of size DATA_LOGGER_EXFAT_FILE_SIZE. The
	  advantage of this format is that users can see at a glance how much
	  data has been logged and over what timespan. The downside is that there
	  are more opportunities for filesystem corruption as the FAT is updated
	  during deployment.

endchoice

config DATA_LOGGER_EXFAT_FILE_SIZE
	int "Size of individual .bin files on filesystem"
	default 10485760
	help
	  Smaller file size provide finer visual indication of the amount of
	  data logged, at the cost of increased filesystem overhead. Default
	  size is 10MB.

endif
