# Infuse Data Logging

config DATA_LOGGER
	bool "Infuse-IoT data logging abstraction"
	depends on DT_HAS_EMBEINT_DATA_LOGGER_ENABLED
	help
	  Abstraction of logging Infuse-IoT payloads to arbitrary backends,
	  whether wireless interfaces (ePacket) or persistent storage (Flash).

if DATA_LOGGER

config DATA_LOGGER_OFFLOAD_WRITES
	bool "Offload block writes to a dedicated thread"
	select NET_BUF
	default y if !ZTEST
	help
	  Block writes can require a significant amount of stack space, depending
	  on the backend. This can be problematic given the wide variety of contexts
	  that writes can be triggered from. Enabling this option offloads that stack
	  requirement to a dedicated thread that can be appropriately sized. If enabled,
	  the data_logger_block_write function will return immediately without waiting
	  for the block to finish writing.

config DATA_LOGGER_OFFLOAD_STACK_SIZE
	int "Stack size for offloaded write thread"
	depends on DATA_LOGGER_OFFLOAD_WRITES
	default 8192 if COVERAGE_GCOV
	default 2048

config DATA_LOGGER_OFFLOAD_MAX_PENDING
	int "Maximum number of blocks that can be queued"
	depends on DATA_LOGGER_OFFLOAD_WRITES
	default 2

config DATA_LOGGER_OFFLOAD_WATCHDOG
	bool "Install watchdog on the offloaded write thread"
	depends on INFUSE_WATCHDOG
	default y

config DATA_LOGGER_RAM_BUFFER
	bool "Enable support for buffering blocks in RAM before writing"
	help
	  Buffering blocks in RAM before writing can reduce the overhead of connecting
	  to or powering up the interface backend by sharing it across multiple
	  blocks. When enabled, must be configured for individual loggers with the
	  `extra-ram-buffer` devicetree property.

config DATA_LOGGER_BURST_WRITES
	bool
	depends on DATA_LOGGER_RAM_BUFFER
	help
	  When multiple blocks are stored contiguously in RAM buffers, more efficient
	  write operations may be available.

module = DATA_LOGGER
module-str = data logger
source "subsys/logging/Kconfig.template.log_config"

rsource "backends/Kconfig"

endif # DATA_LOGGER

config TDF_DATA_LOGGER
	bool "TDF data logging"
	depends on DT_HAS_EMBEINT_TDF_DATA_LOGGER_ENABLED
	depends on DATA_LOGGER
	depends on TDF
	default y

if TDF_DATA_LOGGER

module = TDF_DATA_LOGGER
module-str = TDF data logger
source "subsys/logging/Kconfig.template.log_config"

config TDF_DATA_LOGGER_SERIAL_DUMMY_BACKEND
	bool "Route `TDF_DATA_LOGGER_SERIAL to `dt_nodelabel(tdf_logger_dummy)"
	depends on ZTEST || BOARD_NRF52_BSIM

endif # TDF_DATA_LOGGER
