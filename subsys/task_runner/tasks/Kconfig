# Task Runner tasks

config TASK_RUNNER_TASK_TDF_LOGGER
	bool "TDF logger task"

if TASK_RUNNER_TASK_TDF_LOGGER

config TASK_RUNNER_TASK_TDF_LOGGER_LTE_MODEM_MONITOR
	bool
	default y if INFUSE_MODEM_MONITOR

module = TASK_TDF_LOGGER
module-str = TDF logger task
source "subsys/logging/Kconfig.template.log_config"

config TASK_TDF_LOGGER_LOCATION_TIMEOUT_SEC
	int "Location sample age must be shorter than this to log"
	default 3600

config TASK_TDF_LOGGER_IMU_TIMEOUT_SEC
	int "IMU sample age must be shorter than this to log"
	default 3600

config TASK_TDF_LOGGER_ENVIRONMENTAL_TIMEOUT_SEC
	int "Environmental sample age must be shorter than this to log"
	default 3600

choice TASK_TDF_LOGGER_BATTERY_TYPE
	prompt "TDF type for battery logging"
	default TASK_TDF_LOGGER_BATTERY_TYPE_COMPLETE

config TASK_TDF_LOGGER_BATTERY_TYPE_COMPLETE
	bool "Log TDF_BATTERY_STATE (Voltage, Current, SoC)"

config TASK_TDF_LOGGER_BATTERY_TYPE_VOLTAGE
	bool "Log TDF_BATTERY_VOLTAGE (Voltage only)"

config TASK_TDF_LOGGER_BATTERY_TYPE_SOC
	bool "Log TDF_BATTERY_SOC (SoC only)"

endchoice

endif # TASK_RUNNER_TASK_TDF_LOGGER

config TASK_RUNNER_TASK_IMU
	bool "IMU task"
	select INFUSE_ZBUS_CHAN_IMU

if TASK_RUNNER_TASK_IMU

config TASK_RUNNER_TASK_IMU_STACK_SIZE
	int "Stack size of the task thread"
	default 4096 if COVERAGE
	default 2048

config TASK_RUNNER_TASK_IMU_MAX_FIFO
	int "Maximum number of samples that can be read"
	default INFUSE_IMU_MAX_FIFO_SAMPLES

choice TASK_RUNNER_TASK_IMU_LOG_TYPE
	prompt "TDF format to log IMU data as"

config TASK_RUNNER_TASK_IMU_LOG_TIME_ARRAY
	bool "Log IMU TDFs as TIME_ARRAY"

config TASK_RUNNER_TASK_IMU_LOG_IDX_ARRAY
	bool "Log IMU TDFs as IDX_ARRAY"

config TASK_RUNNER_TASK_IMU_LOG_DIFF_ARRAY
	bool "Log IMU TDFs as DIFF_ARRAY"
	depends on TDF_DIFF

endchoice

config TASK_RUNNER_TASK_IMU_ACC_MAGNITUDE_BROADCAST
	bool "Broadcast accelerometer magnitudes on a zbus channel"
	select INFUSE_ZBUS_CHAN_IMU_ACC_MAG

config TASK_RUNNER_TASK_IMU_ACC_MAGNITUDE_BROADCAST_MAX
	int "Maximum number of magnitudes that can be broadcast"
	depends on TASK_RUNNER_TASK_IMU_ACC_MAGNITUDE_BROADCAST
	default TASK_RUNNER_TASK_IMU_MAX_FIFO

module = TASK_IMU
module-str = IMU task
source "subsys/logging/Kconfig.template.log_config"

endif # TASK_RUNNER_TASK_IMU

config TASK_RUNNER_TASK_BATTERY
	bool "Battery sampling task"
	select INFUSE_ZBUS_CHAN_BATTERY
	depends on ZBUS

if TASK_RUNNER_TASK_BATTERY

module = TASK_BATTERY
module-str = Battery task
source "subsys/logging/Kconfig.template.log_config"

config TASK_RUNNER_TASK_BATTERY_VERBOSE_PRINT_PERIOD
	int "How often to output measured values at LOG_INF instead of LOG_DBG (seconds)"
	default 10
	help
	  Change the frequency of the battery state output printed to the console

config TASK_RUNNER_TASK_BATTERY_FALLBACK_SOC
	int "Default SoC to use internally if reading the SoC fails"
	default 50
	help
	  If the battery measurement hardware fails, reporting a SoC of 0% will likely
	  lead to a shutdown of most device functionality. This option controls the
	  value that is reported instead, allowing the device to continue operation in
	  the absence of external knowledge.

endif # TASK_RUNNER_TASK_BATTERY

config TASK_RUNNER_TASK_BT_SCANNER
	bool "Bluetooth scanner task"
	depends on EPACKET_INTERFACE_BT_ADV

if TASK_RUNNER_TASK_BT_SCANNER

module = TASK_BT_SCANNER
module-str = BT scanner task
source "subsys/logging/Kconfig.template.log_config"

config TASK_RUNNER_TASK_BT_SCANNER_MAX_DEVICES
	int "Maximum number of devices tracked by the task"
	default 16
	help
	  TASK_BT_SCANNER_FLAGS_FILTER_DUPLICATES and TASK_BT_SCANNER_FLAGS_DEFER_LOGGING
	  require tracking of observed devices by the task. This option limits the size
	  of the tracking when those flags are enabled.

endif # TASK_RUNNER_TASK_BT_SCANNER

config TASK_RUNNER_TASK_ENVIRONMENTAL
	bool "Environmental sensing task"
	select INFUSE_ZBUS_CHAN_AMBIENT_ENV
	depends on ZBUS

if TASK_RUNNER_TASK_ENVIRONMENTAL

module = TASK_ENVIRONMENTAL
module-str = Environmental task
source "subsys/logging/Kconfig.template.log_config"

endif # TASK_RUNNER_TASK_ENVIRONMENTAL

config TASK_RUNNER_TASK_GNSS
	bool "GNSS location task"
	depends on ZBUS

if TASK_RUNNER_TASK_GNSS

config TASK_RUNNER_TASK_GNSS_THREAD
	bool

config TASK_RUNNER_TASK_GNSS_WORKQUEUE
	bool

choice TASK_RUNNER_TASK_GNSS_BACKEND
	prompt "Hardware backend for GNSS task"

config TASK_RUNNER_TASK_GNSS_UBX
	bool "u-blox GNSS task"
	select TASK_RUNNER_TASK_GNSS_THREAD
	select INFUSE_ZBUS_CHAN_LOCATION
	select INFUSE_ZBUS_CHAN_UBX_NAV_PVT
	depends on GNSS_UBX_MODEM
	depends on GNSS

config TASK_RUNNER_TASK_GNSS_NRF9X
	bool "nRF9x GNSS task"
	select TASK_RUNNER_TASK_GNSS_WORKQUEUE
	select INFUSE_ZBUS_CHAN_LOCATION
	select INFUSE_ZBUS_CHAN_NRF9X_NAV_PVT
	depends on (GNSS_NRF9X && LTE_LINK_CONTROL) || GNSS_NRF9X_EMUL

endchoice

config TASK_RUNNER_TASK_GNSS_STACK_SIZE
	int "Stack size of the task thread"
	depends on TASK_RUNNER_TASK_GNSS_THREAD
	default 4096 if COVERAGE
	default 2048

config TASK_RUNNER_GNSS_SATELLITE_INFO
	bool "Display satellite information while running fixes"
	imply GNSS_U_BLOX_LARGE_MESSAGES

config TASK_RUNNER_GNSS_MINIMUM_ACCURACY_M
	int "Accuracies worse than this threshold are reported as (-181,-91)"
	default 100000

config TASK_RUNNER_GNSS_TIME_RESYNC_PERIOD_SEC
	int "Resynchronise time from GNSS every N seconds"
	default 3600
	help
	  When running continuously, the GNSS runner will resynchronise the local
	  clock from the GNSS modem every N seconds. Limiting how often this occurs
	  can minimise the number of time discontinuities when logging higher
	  frequency data (e.g. IMU samples). The default value is 1 hour.

config TASK_RUNNER_GNSS_TIME_COARSE_SYNC_PERIOD_SEC
	int "Perform an initial coarse time sync at this period"
	default 7200
	help
	  If the time knowledge of the device is older than this period, perform
	  an initial time sync as soon as time knowledge is obtained from the GNSS.
	  This ensures that even if a fine time sync is not obtained, the device RTC
	  still stays roughly in sync. The default value is 2 hours.

module = TASK_GNSS
module-str = GNSS task
source "subsys/logging/Kconfig.template.log_config"

endif # TASK_RUNNER_TASK_GNSS

config TASK_RUNNER_TASK_NETWORK_SCAN
	bool "LTE Cell scanning task"
	depends on LTE_LINK_CONTROL || WIFI
	select LTE_LC_NEIGHBOR_CELL_MEAS_MODULE if LTE_LINK_CONTROL

if TASK_RUNNER_TASK_NETWORK_SCAN

module = TASK_NETWORK_SCAN
module-str = NETWORK_SCAN task
source "subsys/logging/Kconfig.template.log_config"

config TASK_RUNNER_TASK_NETWORK_SCAN_LTE_MAX_NEIGHBOURS
	int "Maximum number of neighbour cells that can be recorded"
	depends on LTE_LINK_CONTROL
	range 1 16
	default 8

config TASK_RUNNER_TASK_NETWORK_SCAN_LTE_MAX_GCI
	int "Maximum number of global cells that can be recorded"
	depends on LTE_LINK_CONTROL
	range 1 15
	default 8

config TASK_RUNNER_TASK_NETWORK_SCAN_WIFI_MAX_APS
	int "Maximum number of Wi-Fi APs that can be recorded"
	depends on WIFI
	range 1 32
	default 8

configdefault WIFI_MGMT_SCAN_CHAN_MAX_MANUAL
	default 8

endif # TASK_RUNNER_TASK_NETWORK_SCAN
