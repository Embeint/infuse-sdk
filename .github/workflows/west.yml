name: Test west extension commands

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/west.yml'
      - 'scripts/west-commands.yml'
      - 'scripts/west_commands/*'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  west-extensions:
    runs-on: self-hosted
    container:
      image: ghcr.io/zephyrproject-rtos/ci-repo-cache:v0.28.6.20251003
      options: '--entrypoint /bin/bash'
      volumes:
        - /repo-cache/embeint:/github/cache/embeint
        - /repo-cache/pip-cache:/github/pip-cache
    env:
      PIP_CACHE_DIR: /github/pip-cache
      BASE_REF: ${{ github.base_ref }}
      ZEPHYR_TOOLCHAIN_VARIANT: zephyr
    steps:
      - name: Workspace cleanup
        run: |
          rm -rf ./{*,.*}
          rm -rf infuse-sdk

      - name: Clone cached Embeint SDK repository
        continue-on-error: true
        run: |
          git config --global --add safe.directory '*'
          git clone --shared /github/cache/embeint/infuse-sdk infuse-sdk
          cd infuse-sdk
          git remote set-url origin ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: infuse-sdk
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python packages
        working-directory: infuse-sdk
        run: |
          pip install  --cache-dir $PIP_CACHE_DIR -r scripts/requirements-actions.txt --require-hashes

      - name: Environment Setup
        working-directory: infuse-sdk
        run: |
          if [ "${{github.event_name}}" = "pull_request" ]; then
            git config --global user.email "ci@embeint.com"
            git config --global user.name "Embeint CI"
            rm -fr ".git/rebase-apply"
            git rebase origin/${BASE_REF}
            git log  --pretty=oneline | head -n 10
          fi

          west init -l . || true
          west config --global update.narrow true
          west update --path-cache /github/cache/embeint 2>&1 1> west.update.log || west update --path-cache /github/cache/embeint 2>&1 1> west.update.log || ( rm -rf ../modules ../bootloader ../tools && west update --path-cache /github/cache/embeint)
          west forall -c 'git reset --hard HEAD'

          pip install --cache-dir $PIP_CACHE_DIR -r scripts/requirements.txt

          echo "ZEPHYR_SDK_INSTALL_DIR=/opt/toolchains/zephyr-sdk-$( cat SDK_VERSION )" >> $GITHUB_ENV

      - name: Check Environment
        run: |
          cmake --version
          gcc --version
          ls -la /opt/toolchains
          ls -la
          echo "github.ref: ${{ github.ref }}"
          echo "github.base_ref: ${{ github.base_ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"

      - name: Test editors
        run: |
          # Standard workspace setup
          west vscode
          west vscode --search-exclude

          # Editor configuration file generation for various board/app types
          west build -p -b native_sim zephyr/samples/hello_world
          west vscode -d build
          west zed -d build
          west build -p -b qemu_cortex_m3 zephyr/samples/hello_world
          west vscode -d build
          west zed -d build
          west build -p -b nrf52840dk/nrf52840 zephyr/samples/hello_world
          west vscode -d build
          west zed -d build
          west build -p -b nrf9151dk/nrf9151/ns zephyr/samples/hello_world
          west vscode -d build
          west vscode -d build/tfm
          west zed -d build
          west zed -d build/tfm
