/**
 * @file
 * @copyright 2024 Embeint Inc
 * @author Jordan Yates <jordan@embeint.com>
 *
 * SPDX-License-Identifier: LicenseRef-Embeint
 */

#ifndef INFUSE_SDK_DRIVERS_IMU_BMI270_BMI270_H_
#define INFUSE_SDK_DRIVERS_IMU_BMI270_BMI270_H_

#include <stdint.h>

#include <zephyr/sys/util.h>
#include <zephyr/drivers/spi.h>
#include <zephyr/drivers/i2c.h>

#ifdef __cplusplus
extern "C" {
#endif

enum {
	BMI270_REG_CMD = 0x7E,
	BMI270_REG_PWR_CTRL = 0x7D,
	BMI270_REG_PWR_CONF = 0x7C,
	BMI270_REG_NV_CONF = 0x70,
	BMI270_REG_GYR_SELF_TEST_AXES = 0x6E,
	BMI270_REG_ACC_SELF_TEST = 0x6D,
	BMI270_REG_DRV = 0x6C,
	BMI270_REG_IF_CONF = 0x6B,
	BMI270_REG_NVM_CONF = 0x6A,
	BMI270_REG_INTERNAL_ERROR = 0x5F,
	BMI270_REG_INIT_DATA = 0x5E,
	BMI270_REG_INIT_CTRL = 0x59,
	BMI270_REG_INT_MAP_DATA = 0x58,
	BMI270_REG_INT2_MAP_FEAT = 0x57,
	BMI270_REG_INT1_MAP_FEAT = 0x56,
	BMI270_REG_INT_LATCH = 0x55,
	BMI270_REG_INT2_IO_CTRL = 0x54,
	BMI270_REG_INT1_IO_CTRL = 0x53,
	BMI270_REG_ERR_REG_MSK = 0x52,
	BMI270_REG_AUX_WR_DATA = 0x4F,
	BMI270_REG_AUX_WR_ADDR = 0x4E,
	BMI270_REG_AUX_RD_DATA = 0x4D,
	BMI270_REG_AUX_IF_CONF = 0x4C,
	BMI270_REG_AUX_DEV_ID = 0x4B,
	BMI270_REG_SATURATION = 0x4A,
	BMI270_REG_FIFO_CONFIG_1 = 0x49,
	BMI270_REG_FIFO_CONFIG_0 = 0x48,
	BMI270_REG_FIFO_WTM_1 = 0x47,
	BMI270_REG_FIFO_WTM_0 = 0x46,
	BMI270_REG_FIFO_DOWNS = 0x45,
	BMI270_REG_AUX_CONF = 0x44,
	BMI270_REG_GYR_RANGE = 0x43,
	BMI270_REG_GYR_CONF = 0x42,
	BMI270_REG_ACC_RANGE = 0x41,
	BMI270_REG_ACC_CONF = 0x40,
	BMI270_REG_FEAT_PAGE = 0x2F,
	BMI270_REG_FIFO_DATA = 0x26,
	BMI270_REG_FIFO_LENGTH_1 = 0x25,
	BMI270_REG_FIFO_LENGTH_0 = 0x24,
	BMI270_REG_TEMPERATURE_1 = 0x23,
	BMI270_REG_TEMPERATURE_0 = 0x22,
	BMI270_REG_INTERNAL_STATUS = 0x21,
	BMI270_REG_INT_STATUS_1 = 0x1D,
	BMI270_REG_INT_STATUS_0 = 0x1C,
	BMI270_REG_EVENT = 0x1B,
	BMI270_REG_SENSORTIME_2 = 0x1A,
	BMI270_REG_SENSORTIME_1 = 0x19,
	BMI270_REG_SENSORTIME_0 = 0x18,
	BMI270_REG_STATUS = 0x03,
	BMI270_REG_ERR_REG = 0x02,
	BMI270_REG_CHIP_ID = 0x00,
	BMI270_REG_MASK = GENMASK(6, 0),
};

/* BMI270_REG_CMD */
#define BMI270_CMD_G_TRIGGER  0x02
#define BMI270_CMD_USR_GAIN   0x03
#define BMI270_CMD_NVM_PROP   0xA0
#define BMI270_CMD_FIFO_FLUSH 0xB0
#define BMI270_CMD_SOFTRESET  0xB6

/* BMI270_REG_PWR_CONF */
#define BMI270_PWR_CONF_ADV_POWER_SAVE_EN  BIT(0)
#define BMI270_PWR_CONF_ADV_POWER_SAVE_DIS 0
#define BMI270_PWR_CONF_FIFO_SELF_WAKE_EN  BIT(1)
#define BMI270_PWR_CONF_FIFO_SELF_WAKE_DIS 0
#define BMI270_PWR_CONF_FAST_POWER_UP_EN   BIT(2)
#define BMI270_PWR_CONF_FAST_POWER_UP_DIS  0

/* BMI270_REG_FIFO_CONFIG_1 */
#define BMI270_FIFO_CONFIG_1_INT1_EDGE    (0x00 << 0)
#define BMI270_FIFO_CONFIG_1_INT1_LEVEL   (0x01 << 0)
#define BMI270_FIFO_CONFIG_1_INT1_ACC_SAT (0x02 << 0)
#define BMI270_FIFO_CONFIG_1_INT1_GYR_SAT (0x03 << 0)
#define BMI270_FIFO_CONFIG_1_INT2_EDGE    (0x00 << 2)
#define BMI270_FIFO_CONFIG_1_INT2_LEVEL   (0x01 << 2)
#define BMI270_FIFO_CONFIG_1_INT2_ACC_SAT (0x02 << 2)
#define BMI270_FIFO_CONFIG_1_INT2_GYR_SAT (0x03 << 2)
#define BMI270_FIFO_CONFIG_1_HEADER_EN    BIT(4)
#define BMI270_FIFO_CONFIG_1_AUX_EN       BIT(5)
#define BMI270_FIFO_CONFIG_1_ACC_EN       BIT(6)
#define BMI270_FIFO_CONFIG_1_GYR_EN       BIT(7)

/* BMI270_REG_FIFO_CONFIG_0 */
#define BMI270_FIFO_CONFIG_0_STOP_ON_FULL  BIT(0)
#define BMI270_FIFO_CONFIG_0_SENSORTIME_EN BIT(1)

/* BMI270_REG_GYR_RANGE */
#define BMI270_GYR_RANGE_2000DPS 0x00
#define BMI270_GYR_RANGE_1000DPS 0x01
#define BMI270_GYR_RANGE_500DPS  0x02
#define BMI270_GYR_RANGE_250DPS  0x03
#define BMI270_GYR_RANGE_125DPS  0x04

/* BMI270_REG_GYR_CONF */
#define BMI270_GYR_CONF_ODR_25D32          0x01
#define BMI270_GYR_CONF_ODR_25D16          0x02
#define BMI270_GYR_CONF_ODR_25D8           0x03
#define BMI270_GYR_CONF_ODR_25D4           0x04
#define BMI270_GYR_CONF_ODR_25D2           0x05
#define BMI270_GYR_CONF_ODR_25             0x06
#define BMI270_GYR_CONF_ODR_50             0x07
#define BMI270_GYR_CONF_ODR_100            0x08
#define BMI270_GYR_CONF_ODR_200            0x09
#define BMI270_GYR_CONF_ODR_400            0x0A
#define BMI270_GYR_CONF_ODR_800            0x0B
#define BMI270_GYR_CONF_ODR_1600           0x0C
#define BMI270_GYR_CONF_ODR_3200           0x0D
#define BMI270_GYR_CONF_PERF_OSR4          (0x00 << 4)
#define BMI270_GYR_CONF_PERF_OSR2          (0x01 << 4)
#define BMI270_GYR_CONF_PERF_NORM          (0x02 << 4)
#define BMI270_GYR_CONF_NOISE_LOW_POWER    0
#define BMI270_GYR_CONF_NOISE_PERFORMANCE  BIT(6)
#define BMI270_GYR_CONF_FILTER_LOW_POWER   0
#define BMI270_GYR_CONF_FILTER_PERFORMANCE BIT(7)

/* BMI270_REG_ACC_RANGE */
#define BMI270_ACC_RANGE_2G  0x00
#define BMI270_ACC_RANGE_4G  0x01
#define BMI270_ACC_RANGE_8G  0x02
#define BMI270_ACC_RANGE_16G 0x03

/* BMI270_REG_ACC_CONF */
#define BMI270_ACC_CONF_ODR_25D32          0x01
#define BMI270_ACC_CONF_ODR_25D16          0x02
#define BMI270_ACC_CONF_ODR_25D8           0x03
#define BMI270_ACC_CONF_ODR_25D4           0x04
#define BMI270_ACC_CONF_ODR_25D2           0x05
#define BMI270_ACC_CONF_ODR_25             0x06
#define BMI270_ACC_CONF_ODR_50             0x07
#define BMI270_ACC_CONF_ODR_100            0x08
#define BMI270_ACC_CONF_ODR_200            0x09
#define BMI270_ACC_CONF_ODR_400            0x0A
#define BMI270_ACC_CONF_ODR_800            0x0B
#define BMI270_ACC_CONF_ODR_1600           0x0C
#define BMI270_ACC_CONF_LP_NO_AVG          (0x00 << 4)
#define BMI270_ACC_CONF_LP_AVG_2           (0x01 << 4)
#define BMI270_ACC_CONF_LP_AVG_4           (0x02 << 4)
#define BMI270_ACC_CONF_LP_AVG_8           (0x03 << 4)
#define BMI270_ACC_CONF_LP_AVG_16          (0x04 << 4)
#define BMI270_ACC_CONF_LP_AVG_32          (0x05 << 4)
#define BMI270_ACC_CONF_LP_AVG_64          (0x06 << 4)
#define BMI270_ACC_CONF_LP_AVG_128         (0x07 << 4)
#define BMI270_ACC_CONF_PERF_OSR4          (0x00 << 4)
#define BMI270_ACC_CONF_PERF_OSR2          (0x01 << 4)
#define BMI270_ACC_CONF_PERF_NORM          (0x02 << 4)
#define BMI270_ACC_CONF_PERF_CIC           (0x03 << 4)
#define BMI270_ACC_CONF_FILTER_LOW_POWER   0
#define BMI270_ACC_CONF_FILTER_PERFORMANCE BIT(7)

/* BMI270_REG_INTERNAL_STATUS */
#define BMI270_INTERNAL_STATUS_NOT_INIT    0x00
#define BMI270_INTERNAL_STATUS_INIT_OK     0x01
#define BMI270_INTERNAL_STATUS_INIT_ERR    0x02
#define BMI270_INTERNAL_STATUS_DRV_ERR     0x03
#define BMI270_INTERNAL_STATUS_SNS_STOP    0x04
#define BMI270_INTERNAL_STATUS_NVM_ERR     0x05
#define BMI270_INTERNAL_STATUS_STARTUP_ERR 0x06
#define BMI270_INTERNAL_STATUS_COMPAT_ERR  0x07

/* BMI270_REG_INT_MAP_DATA */
#define BMI270_INT_MAP_DATA_INT1_FIFO_FULL  BIT(0)
#define BMI270_INT_MAP_DATA_INT1_FIFO_WTM   BIT(1)
#define BMI270_INT_MAP_DATA_INT1_DATA_READY BIT(2)
#define BMI270_INT_MAP_DATA_INT1_ERROR      BIT(3)
#define BMI270_INT_MAP_DATA_INT2_FIFO_FULL  BIT(4)
#define BMI270_INT_MAP_DATA_INT2_FIFO_WTM   BIT(5)
#define BMI270_INT_MAP_DATA_INT2_DATA_READY BIT(6)
#define BMI270_INT_MAP_DATA_INT2_ERROR      BIT(7)

/* BMI270_REG_INT2_IO_CTRL */
#define BMI270_INT2_IO_CTRL_ACTIVE_HIGH BIT(1)
#define BMI270_INT2_IO_CTRL_ACTIVE_LOW  0
#define BMI270_INT2_IO_CTRL_OPEN_DRAIN  BIT(2)
#define BMI270_INT2_IO_CTRL_PUSH_PULL   0
#define BMI270_INT2_IO_CTRL_OUTPUT_EN   BIT(3)
#define BMI270_INT2_IO_CTRL_OUTPUT_DIS  0
#define BMI270_INT2_IO_CTRL_INPUT_EN    BIT(4)
#define BMI270_INT2_IO_CTRL_INPUT_DIS   0

/* BMI270_REG_INT1_IO_CTRL */
#define BMI270_INT1_IO_CTRL_ACTIVE_HIGH BIT(1)
#define BMI270_INT1_IO_CTRL_ACTIVE_LOW  0
#define BMI270_INT1_IO_CTRL_OPEN_DRAIN  BIT(2)
#define BMI270_INT1_IO_CTRL_PUSH_PULL   0
#define BMI270_INT1_IO_CTRL_OUTPUT_EN   BIT(3)
#define BMI270_INT1_IO_CTRL_OUTPUT_DIS  0
#define BMI270_INT1_IO_CTRL_INPUT_EN    BIT(4)
#define BMI270_INT1_IO_CTRL_INPUT_DIS   0

/* BMI270_REG_PWR_CTRL */
#define BMI270_PWR_CTRL_AUX_EN   BIT(0)
#define BMI270_PWR_CTRL_AUX_DIS  0
#define BMI270_PWR_CTRL_GYR_EN   BIT(1)
#define BMI270_PWR_CTRL_GYR_DIS  0
#define BMI270_PWR_CTRL_ACC_EN   BIT(2)
#define BMI270_PWR_CTRL_ACC_DIS  0
#define BMI270_PWR_CTRL_TEMP_EN  BIT(3)
#define BMI270_PWR_CTRL_TEMP_DIS 0

/* BMI270_REG_CHIP_ID */
#define BMI270_CHIP_ID 0x24

enum {
	FIFO_HEADER_EXT_INT1 = BIT(0),
	FIFO_HEADER_EXT_INT2 = BIT(1),
	FIFO_HEADER_CTRL_SKIP_FRAME = 0,
	FIFO_HEADER_CTRL_SENSORTIME = BIT(2),
	FIFO_HEADER_CTRL_INPUT_CONFIG = BIT(3),
	FIFO_HEADER_REG_ACC = BIT(2),
	FIFO_HEADER_REG_GYR = BIT(3),
	FIFO_HEADER_REG_AUX = BIT(4),
	FIFO_HEADER_PARAM_MASK = GENMASK(5, 2),
	FIFO_HEADER_MODE_CONTROL = BIT(6),
	FIFO_HEADER_MODE_REGULAR = BIT(7),
	FIFO_HEADER_MODE_MASK = GENMASK(7, 6),
};

#define BMI270_FIFO_SIZE      2048
#define BMI270_POR_DELAY      2000
#define BMI270_PWR_CONF_DELAY 500

#if CONFIG_BMI270_BUS_SPI
extern const struct bmi270_bus_io bmi270_bus_io_spi;
#endif

#if CONFIG_BMI270_BUS_I2C
extern const struct bmi270_bus_io bmi270_bus_io_i2c;
#endif

union bmi270_bus {
#if CONFIG_BMI270_BUS_SPI
	struct spi_dt_spec spi;
#endif
#if CONFIG_BMI270_BUS_I2C
	struct i2c_dt_spec i2c;
#endif
};

typedef int (*bmi270_bus_check_fn)(const union bmi270_bus *bus);
typedef int (*bmi270_bus_init_fn)(const union bmi270_bus *bus);
typedef int (*bmi270_reg_read_fn)(const union bmi270_bus *bus, uint8_t start, uint8_t *data,
				  uint16_t len);
typedef int (*bmi270_reg_write_fn)(const union bmi270_bus *bus, uint8_t start, const uint8_t *data,
				   uint16_t len);

struct bmi270_bus_io {
	bmi270_bus_check_fn check;
	bmi270_reg_read_fn read;
	bmi270_reg_write_fn write;
	bmi270_bus_init_fn init;
};

#ifdef __cplusplus
}
#endif

#endif /* INFUSE_SDK_DRIVERS_IMU_BMI270_BMI270_H_ */
